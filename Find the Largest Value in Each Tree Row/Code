/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> largestValues(TreeNode root) {
      if(root==null) return new ArrayList<>();
      Queue<TreeNode> q=new LinkedList<TreeNode>();
      q.add(root);

      List<Integer> ans =new ArrayList<Integer>();
      while(!q.isEmpty()){
        int t=q.size();
        int c=Integer.MIN_VALUE;
        for(int i=0;i<t;i++){
          TreeNode v=q.remove();
          c=Math.max(c,v.val);
          if(v.left!=null) q.add(v.left);
          if(v.right!=null) q.add(v.right);

        }
        ans.add(c);
      }  
      return ans;   
    }
}
